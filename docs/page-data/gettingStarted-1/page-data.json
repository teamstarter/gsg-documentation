{"componentChunkName":"component---src-templates-docs-js","path":"/gettingStarted-1","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"7060f00e-df18-56fe-843b-d7685aa47ac4","title":"Getting started","slug":"/gettingStarted-1"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Getting started\",\n  \"metaTitle\": \"The default usage of graphql-sequelize-generator\",\n  \"metaDescription\": \"Here we descripbe the base functionnalities of graphql-sequelize-generator\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Graphql-Sequelize-Generator\"), mdx(\"p\", null, \"Graphql-Sequelize-Generator (GSG) is a set of tools that will allow you to\\neasily generate a GraphQL API from your sequelize models.\"), mdx(\"p\", null, \"It's a very good fit for POCs and MVPs, while also scaling pretty well thanks to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mickhansen/dataloader-sequelize\"\n  }), \"dataloader-sequelize\"), \".\"), mdx(\"h2\", null, \"What can I do with GSG?\"), mdx(\"p\", null, \"The tools provided by this library will allow you to:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Query any model defined in your app through GraphQL.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Auto-generate create/update/delete mutations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define before/after hooks and all resolvers, including the mutations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Easily create custom mutations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Get an integrated interface to test your GraphQL API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Counts for each model can also be generated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Subscriptions auto-generated for mutations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add custom fields/resolvers on auto-generated types.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Easy integration with \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/mickhansen/dataloader-sequelize\"\n  }), \"dataloader-sequelize\"))), mdx(\"h2\", null, \"Getting started\"), mdx(\"p\", null, \"Add the lib and the peer dependencies:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ yarn add graphql-sequelize-generator graphql sequelize graphql-sequelize\\n\")), mdx(\"p\", null, \"\\u26A0\\uFE0F Caution: GSG requires at least Node v9.11.2 or greater as it is using async/await.\"), mdx(\"p\", null, \"Then you will be ready to add a GraphQL API to your express server with only a few lines of code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import express from 'express'\\nconst {\\n  generateModelTypes,\\n  generateGraphqlExpressMiddleware\\n} = require('graphql-sequelize-generator')\\nimport models from './models'\\n\\nconst types = generateModelTypes(models)\\n\\ngraphqlSchemaDeclaration.user = {\\n  model: models.user,\\n  actions: ['list', 'create']\\n}\\n\\nconst server = generateApolloServer({\\n  graphqlSchemaDeclaration,\\n  types,\\n  models\\n})\\n\\nconst app = express()\\nserver.applyMiddleware({\\n  app,\\n  path: '/graphql'\\n})\\n\")), mdx(\"h1\", null, \"Manual\"), mdx(\"p\", null, \"Get started with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vincent-desmares.gitbook.io/graphql-sequelize-generator/\"\n  }), \"the online documentation\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#graphql-sequelize-generator","title":"Graphql-Sequelize-Generator","items":[{"url":"#what-can-i-do-with-gsg","title":"What can I do with GSG?"},{"url":"#getting-started","title":"Getting started"}]},{"url":"#manual","title":"Manual"}]},"parent":{"relativePath":"gettingStarted-1.md"},"frontmatter":{"metaTitle":"The default usage of graphql-sequelize-generator","metaDescription":"Here we descripbe the base functionnalities of graphql-sequelize-generator"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/defaultUsage-2","title":"Default usage"}}},{"node":{"fields":{"slug":"/gettingStarted-1","title":"Getting started"}}},{"node":{"fields":{"slug":"/","title":"Getting started"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"7060f00e-df18-56fe-843b-d7685aa47ac4"}}}